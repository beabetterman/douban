<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <display-name>Archetype Created Web Application</display-name>


  <!-- Spring session configuration. Start -->
  <!-- Should be placed at the head of the file. --> 

  <!--DelegatingFilterProxy将查找一个Bean的名字springSessionRepositoryFilter丢给一个过滤器。为每个请求调用DelegatingFilterProxy, springSessionRepositoryFilter将被调用-->  
  <filter>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>


  <filter-mapping>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>ERROR</dispatcher>
  </filter-mapping>
  
  <session-config>  
      <session-timeout>30</session-timeout>  
  </session-config> 
  
  <!-- Spring session configuration. End -->
  
  
  <!-- Don't override the context-param tag. Please define all config files in one tag, separate by , or ;  Spring和mybatis的配置文件  -->  
  <!-- 
  <context-param>  
      <param-name>contextConfigLocation</param-name>  
      <param-value>classpath:spring-mybatis.xml</param-value>  
  </context-param>  
  -->
  <!-- 为了能够处理中文的post请求，再配置一个encodingFilter过滤器，将数据转换成utf-8编码，以避免post请求中文出现乱码情况 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>

    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>

    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <!-- 过滤器拦截所有请求 -->
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 防止Spring内存溢出监听器 -->  
  <listener>  
      <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
  </listener>  
  
  
  <!-- 创建一个servlet，命名为mvc-dispatcher -->
  
  <servlet>
    <servlet-name>SpringMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

    <!-- 指定Spring配置文件的位置，否则会根据servlet-name+“-servlet.xml”自动匹配Spring配置文件 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
        classpath:spring-mvc.xml
      </param-value>
    </init-param>

    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  
  <!-- Spring session. springSessionRepositoryFilter bean 的初始化的配置文件  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring-mybatis.xml,classpath:spring-session.xml</param-value>
  </context-param>
  
  <!-- Spring监听器 -->  
  <listener>  
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
  </listener> 

  <!-- FreeMarker 配置 -->

  <!-- 配置这个mvc-dispatcher的拦截请求，url-pattern为 / ，说明拦截所有请求 -->
  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  

  <welcome-file-list>  
    <welcome-file>/index.jsp</welcome-file>  
  </welcome-file-list> 
  
  <!-- 需要访问的资源不存在 -->
  <error-page>
     <error-code>404</error-code>
     <location>/WEB-INF/error/404.jsp</location>
  </error-page>
  <!-- 出现异常 -->
  <error-page>
     <exception-type>java.lang.Throwable</exception-type>
     <location>/WEB-INF/error/webExceptionPage.jsp</location>
  </error-page>
  <!-- 服务器内部错误 -->
  <error-page>
     <error-code>500</error-code>
     <location>/WEB-INF/error/500.jsp</location>
  </error-page>


</web-app>